// <auto-generated />
using System;
using MGP.Notifications.Persistance.Data.Tables;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MGP.Notifications.Persistance.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241125212336_First-Migration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MGP.Notifications.Persistance.Data.Tables.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasPrecision(0)
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("MGP.Notifications.Persistance.Data.Tables.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasPrecision(0)
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("NotificationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 25, 21, 23, 35, 534, DateTimeKind.Utc).AddTicks(1227),
                            Description = "New Message"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 25, 21, 23, 35, 534, DateTimeKind.Utc).AddTicks(1230),
                            Description = "Update"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 25, 21, 23, 35, 534, DateTimeKind.Utc).AddTicks(1232),
                            Description = "Mass"
                        });
                });

            modelBuilder.Entity("MGP.Notifications.Persistance.Data.Tables.Notification", b =>
                {
                    b.HasOne("MGP.Notifications.Persistance.Data.Tables.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");
                });
#pragma warning restore 612, 618
        }
    }
}
